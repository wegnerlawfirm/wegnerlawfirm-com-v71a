---
import Testimonial from "./Testimonial.astro";
import Allen from "../_common/imgs/Allen-testimony.png";
import Bartlett from "../_common/imgs/Bartlett-testimony.png";
import StoredTestimonials from "./StoredTestimonials.astro";
import Icon from "../_common/Icon.astro";
---

<div class="strip">
    <div class="testimony-display">
        <div class="testimony-control-strip">
            <div class="testimony-control-group" data-state="checked">
                <div class="testimony-control testimony-control-open">
                    <Icon icon="radio_button_unchecked" />
                </div>
                <div class="testimony-control testimony-control-closed">
                    <Icon icon="radio_button_checked" />
                </div>
            </div>

            <div class="testimony-control-group" data-state="unchecked">
                <div class="testimony-control testimony-control-open">
                    <Icon icon="radio_button_unchecked" />
                </div>
                <div class="testimony-control testimony-control-closed">
                    <Icon icon="radio_button_checked" />
                </div>
            </div>

            <div class="testimony-control-group" data-state="unchecked">
                <div class="testimony-control testimony-control-open">
                    <Icon icon="radio_button_unchecked" />
                </div>
                <div class="testimony-control testimony-control-closed">
                    <Icon icon="radio_button_checked" />
                </div>
            </div>

            <div class="testimony-control-group" data-state="unchecked">
                <div class="testimony-control testimony-control-open">
                    <Icon icon="radio_button_unchecked" />
                </div>
                <div class="testimony-control testimony-control-closed">
                    <Icon icon="radio_button_checked" />
                </div>
            </div>

            <div class="testimony-control-group" data-state="unchecked">
                <div class="testimony-control testimony-control-open">
                    <Icon icon="radio_button_unchecked" />
                </div>
                <div class="testimony-control testimony-control-closed">
                    <Icon icon="radio_button_checked" />
                </div>
            </div>
        </div>
        <div id="testimonial-display-strip">
            <div class="testimony-display-container">
                <Testimonial
                    client="Bartlett International Ltd."
                    img={Bartlett}
                    speaker="David Cooper"
                    position="General Counsel"
                    quote="Working with Chris is an absolute pleasure; his expertise and efficiency makes my job much easier. He has been invaluable to us as we expand in the U.S. market."
                    startVisible
                />
            </div>
        </div>
    </div>
</div>
<StoredTestimonials/>
<style>
    .testimony-display {
        display: flex;
        flex-direction: column-reverse;
        justify-content: center;
        @media (min-width: 768px) {
            position: relative;
            max-width: 500px;
            margin: 0 auto;
        }
    }

    .testimony-control-paused{
        color: red;
    }

    [data-state="unchecked"] {
        .testimony-control-closed {
            display: none;
        }
    }

    [data-state="checked"] {
        .testimony-control-open {
            display: none;
        }
    }

    .testimony-control-strip {
        display: flex;

        text-align: center;
        justify-content: center;

        padding-top: 1rem;
    }

    .testimonial-display-strip {
        display: flex;
    }

    .strip {
        background-color: #f8f8f8;

        display: flex;
        flex-direction: column;
        justify-content: space-between

        @media(min-width: 768px){
            padding-top: 2rem;
        padding-bottom: 2rem;
        }
    }

    .strip-cntls {
        text-align: center;
    }

    .testimony-control {
        font-size: 1.2rem;
        padding: 0 0.5rem;
        cursor: pointer;


        @media(min-width: 768px){
            font-size: 1rem;
        }
    }
</style>

<script>
    const testimonies = document.querySelectorAll(".testimonial-container");
    const display = document.getElementById("testimonial-display-strip");
    const testimoniesLength = testimonies.length;
    const radioGroups = document.querySelectorAll(".testimony-control-group");
    let currentTestimony = 1;
    let isRunning = true;
    let currentRadio = 0;

    const pasueControls=()=>{
        radioGroups.forEach(rdo=>rdo.classList.add('testimony-control-paused'))
    }

    const unpauseControls=()=>{
        radioGroups.forEach(rdo=>rdo.classList.remove('testimony-control-paused'))
    }

    const updateTestimony = (ele: HTMLElement, newTestimony: HTMLElement) => {
        const oldTestimony = ele.querySelector(".testimonial-container");
        //@ts-ignore
        oldTestimony.classList.add("testimonial-container-hidden");
        setTimeout(() => {
            newTestimony.classList.add("testimonial-container-hidden");
            ele.innerHTML = "";
            ele.appendChild(newTestimony);
            setTimeout(() => {
                newTestimony.classList.remove("testimonial-container-hidden");
            }, 20);
        }, 1000);
    };

    radioGroups.forEach((rdo) => {
        const radioNumber = currentRadio;
        rdo.addEventListener("click", () => {
            if (isRunning) {
                isRunning = false;
                pasueControls()
                const newTestimony = testimonies[radioNumber];
                //@ts-ignore
                updateTestimony(display, newTestimony);
                radioGroups.forEach((grp) =>
                    grp.setAttribute("data-state", "unchecked"),
                );
                rdo.setAttribute("data-state", "checked");
                currentTestimony = radioNumber;
            } else {
                isRunning = true;
                currentTestimony++;
                unpauseControls()
            }
        });
        currentRadio++;
    });



    // Set interval to replace images
    setInterval(() => {
        if (isRunning) {
            const lastIndex = (currentTestimony - 1) % testimoniesLength;
            const nextIndex = currentTestimony++ % testimoniesLength;
            const nextImage = testimonies[nextIndex];
            radioGroups[lastIndex].setAttribute("data-state", "unchecked");
            radioGroups[nextIndex].setAttribute("data-state", "checked");

            //@ts-ignore
            updateTestimony(display, nextImage.cloneNode(true)); // Clone the node to avoid removing it from its original position
        }
    }, 9000); // Increased interval to ensure animations have time to complete
</script>
